(defmacro += (num inc)
    (list 'setf num `(+ ,num ,inc) )
)


(defmacro while (test &rest bodies)
       `(do ()
            ((not , test) T)
            ,@ bodies)
)


(defmacro iterate (controlVariable beginValueExpr endValueExpr incrExpr &rest expr)
     (let ((endValue (eval endValueExpr) )
           (incValue (eval incrExpr) )
           (controlVariable (eval beginValueExpr) ) )
           (while (<= controlVariable endValue)
               (doList (control expr T)
                       (setf i controlVariable)
                       (eval control)
                       (setf controlVariable i)
               )
               (+= controlVariable incValue)
           )
     )
)
