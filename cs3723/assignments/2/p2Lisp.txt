(defun removeNILTop (L)
    (cond (  (NULL L) NIL )
          (  (NULL (car L)) (removeNILTop(cdr L)) )
          (T (cons (car L) (removeNILTop(cdr L)) ) )
    )
)

(defun removeNILMost (L)
    (cond (  (NULL L) NIL )
          (  (NULL  (car L))  (removeNILMost(cdr L)) )
          (  (LISTP (car L))  (cons (removeNILMost(car L)) (removeNILMost(cdr L)) ) )
          (T (cons  (car L)   (removeNILMost(cdr L)) ) )
    )
)

(defun reverseTop (L)
    (cond (  (NULL L) NIL)
          (T (reverse L) )
    )
)

(defun reverseAll (L)
    (cond (  (ATOM L) L)
          (T (append (reverseAll(cdr L)) (list (reverseAll(car L)))) )
    )
)

(defun palindrome (L)
    (cond (  (NULL L) NIL)
          (T (EQUAL (reverse L) L))
    )
)
